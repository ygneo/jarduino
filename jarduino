#!/usr/bin/env python
import sys
import warnings
import serial
import serial.tools.list_ports
from subprocess import call


def output_serial_input(serial_device):
    while 1:
        try:
            print serial_device.readline().strip()
        except KeyboardInterrupt:
            serial_device.close()
            exit(1)


def upload(device):
    call("MONITOR_PORT={} make".format(device), shell=True)
    call("MONITOR_PORT={} make upload".format(device), shell=True)


if len(sys.argv) > 2 or len(sys.argv) == 1:
    print "Usage: {} [upload|read]".format(sys.argv[0])
    exit(1)

mode = sys.argv[1]

arduino_ports = []
for port in serial.tools.list_ports.comports():
    is_arduino_device = 'Arduino' in port.description or \
                        'Arduino' in port.manufacturer
    if is_arduino_device:
        arduino_ports.append(port.device)

if not arduino_ports:
    raise IOError("No Arduino found")

if len(arduino_ports) > 1:
    warnings.warn('Multiple Arduinos found - using the first.')

arduino_device = arduino_ports[0]

print "[x] Arduino found in {}\n".format(arduino_device)

serial_device = serial.Serial(arduino_device, 9600, timeout=2)

if mode == "read":
    output_serial_input(serial_device)
elif mode == "upload":
    upload(arduino_device)
